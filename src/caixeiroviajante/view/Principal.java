package caixeiroviajante.view;

import caixeiroviajante.control.CaixeiroViajante;
import caixeiroviajante.control.GerenciadorRota;
import caixeiroviajante.model.Populacao;
import caixeiroviajante.model.Cidade;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    Populacao populacao;

    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextResultado = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jButtonAdicionarCidade = new javax.swing.JButton();
        jButtonRemoverCidade = new javax.swing.JButton();
        jButtonIniciar = new javax.swing.JButton();
        jButtonRemoverTodasCidades = new javax.swing.JButton();
        jButtonLimparTela = new javax.swing.JButton();
        jCheckBoxCidadesAleatorias = new javax.swing.JCheckBox();
        jButtonImprimirCidades = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritmo Genético - Caixeiro Viajante");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setPreferredSize(new java.awt.Dimension(460, 89));

        jTextResultado.setColumns(20);
        jTextResultado.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        jTextResultado.setRows(5);
        jTextResultado.setEnabled(false);
        jTextResultado.setMinimumSize(new java.awt.Dimension(240, 89));
        jTextResultado.setPreferredSize(new java.awt.Dimension(240, 89));
        jScrollPane2.setViewportView(jTextResultado);

        jPanel1.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jButtonAdicionarCidade.setText("Adicionar cidade");
        jButtonAdicionarCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarCidadeActionPerformed(evt);
            }
        });

        jButtonRemoverCidade.setText("Remover cidade");
        jButtonRemoverCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverCidadeActionPerformed(evt);
            }
        });

        jButtonIniciar.setText("Iniciar");
        jButtonIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIniciarActionPerformed(evt);
            }
        });

        jButtonRemoverTodasCidades.setText("Remover todas as cidades");
        jButtonRemoverTodasCidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverTodasCidadesActionPerformed(evt);
            }
        });

        jButtonLimparTela.setText("Limpar tela");
        jButtonLimparTela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparTelaActionPerformed(evt);
            }
        });

        jCheckBoxCidadesAleatorias.setText("Cidades Aleatórias");
        jCheckBoxCidadesAleatorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCidadesAleatoriasActionPerformed(evt);
            }
        });

        jButtonImprimirCidades.setText("Imprimir Cidades");
        jButtonImprimirCidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirCidadesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonRemoverTodasCidades, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(jButtonRemoverCidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAdicionarCidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonIniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonLimparTela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jCheckBoxCidadesAleatorias)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButtonImprimirCidades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonAdicionarCidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRemoverCidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRemoverTodasCidades)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonImprimirCidades)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLimparTela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxCidadesAleatorias)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 365, Short.MAX_VALUE)
                .addComponent(jButtonIniciar)
                .addContainerGap())
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.WEST);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIniciarActionPerformed

        if (!jCheckBoxCidadesAleatorias.isSelected()) {
            populacao = new Populacao(GerenciadorRota.qtdCidades() * 2, true);
        }
        iniciaProcessamento(populacao);
    }//GEN-LAST:event_jButtonIniciarActionPerformed

    private void jButtonAdicionarCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarCidadeActionPerformed

        try {
            String nome_cidade = JOptionPane.showInputDialog("Digite o nome da Cidade");
            String x = JOptionPane.showInputDialog("Informe a posição X da cidade (número inteiro)");
            String y = JOptionPane.showInputDialog("Informe a posição Y da cidade (número inteiro)");

            Cidade cidade = new Cidade(nome_cidade, Integer.parseInt(x), Integer.parseInt(y));
            GerenciadorRota.addCidade(cidade);
            jTextResultado.append(cidade.toString() + " - Inserida com sucesso! \n");
        } catch (Exception e) {
            jTextResultado.append("Houve um erro ao inserir a cidade, algum dado informado é inválido \n");
        }

    }//GEN-LAST:event_jButtonAdicionarCidadeActionPerformed

    private void jButtonRemoverCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverCidadeActionPerformed
        try {
            String indice = JOptionPane.showInputDialog("Digite o indice da cidade que deve ser removida");
            jTextResultado.append(GerenciadorRota.removeCidade(Integer.parseInt(indice)) + " - Removida com sucesso! \n");
        } catch (Exception e) {
            jTextResultado.append("Houve um erro ao remover a cidade \n");
        }
    }//GEN-LAST:event_jButtonRemoverCidadeActionPerformed

    private void jButtonRemoverTodasCidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverTodasCidadesActionPerformed
        if (GerenciadorRota.removeTodasCidades()) {
            jTextResultado.setText("Todas as cidades foram removidas com sucesso");
        } else {
            jTextResultado.setText("Todas as cidades foram removidas com sucesso");
        }
    }//GEN-LAST:event_jButtonRemoverTodasCidadesActionPerformed

    private void jButtonLimparTelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparTelaActionPerformed
        limparTela();
    }//GEN-LAST:event_jButtonLimparTelaActionPerformed

    private void jCheckBoxCidadesAleatoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCidadesAleatoriasActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "Ao alterar este parâmetro, todas as cidades serão removidas. \n Deseja continuar?", "Cidades aleatórias", JOptionPane.YES_NO_OPTION);

        if (resposta == JOptionPane.YES_OPTION) {
            GerenciadorRota.removeTodasCidades();

            if (jCheckBoxCidadesAleatorias.isSelected()) {
                ativaBotoes(false);
                populacao = CaixeiroViajante.gerarPopulacaoAleatoria();
            } else {
                ativaBotoes(true);
            }
        } else {
            jCheckBoxCidadesAleatorias.setSelected(!jCheckBoxCidadesAleatorias.isSelected());
        }
    }//GEN-LAST:event_jCheckBoxCidadesAleatoriasActionPerformed

    private void jButtonImprimirCidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirCidadesActionPerformed
        imprimirCidades();
    }//GEN-LAST:event_jButtonImprimirCidadesActionPerformed

    /*Funções do sistema*/
    private void ativaBotoes(boolean ativa) {
        jButtonAdicionarCidade.setEnabled(ativa);
        jButtonRemoverCidade.setEnabled(ativa);
    }

    private void limparTela() {
        jTextResultado.setText("");
    }

    private void iniciaProcessamento(Populacao populacao) {
        jTextResultado.setText("Resultado: \n\n");
        jTextResultado.append("Distância inicial: " + (int) populacao.getMelhorRota().getDistancia() + "\n");
        populacao = CaixeiroViajante.aplicaAlgoritmoGenetico(populacao);
        jTextResultado.append("Distância final: " + (int) populacao.getMelhorRota().getDistancia() + "\n");
        jTextResultado.append("\n\nSolução:" + "\n");
        jTextResultado.append(populacao.getMelhorRota().toString() + "\n");
    }

    private void imprimirCidades() {         
        jTextResultado.append("\n Cidades: \n\n");
        for (int i = 0; i < GerenciadorRota.qtdCidades(); i++) {
            jTextResultado.append(i + 1 + ")" + GerenciadorRota.getCidade(i).toString() + "\n");                                                
        }                                       
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionarCidade;
    private javax.swing.JButton jButtonImprimirCidades;
    private javax.swing.JButton jButtonIniciar;
    private javax.swing.JButton jButtonLimparTela;
    private javax.swing.JButton jButtonRemoverCidade;
    private javax.swing.JButton jButtonRemoverTodasCidades;
    private javax.swing.JCheckBox jCheckBoxCidadesAleatorias;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextResultado;
    // End of variables declaration//GEN-END:variables
}
